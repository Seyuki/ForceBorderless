<metro:MetroWindow x:Class="ForceBorderless.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:local="clr-namespace:ForceBorderless"
        xmlns:uc="clr-namespace:ForceBorderless.UserControls"
        mc:Ignorable="d"
        UseLayoutRounding="True"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        GlowBrush="{DynamicResource AccentColorBrush}"
        BorderThickness="1" WindowStartupLocation="CenterScreen"
        Title="{DynamicResource WindowTitle}" TitleCaps="False"
        Icon="Resources/icon.ico" ShowIconOnTitleBar="False"
        Closing="Window_Closing" StateChanged="WindowStateChanged"
        MinWidth="600" MinHeight="500" Height="600" Width="750">

    <!--Titlebar buttons-->
    <metro:MetroWindow.RightWindowCommands>
        <metro:WindowCommands>
            <Button Content="logs" Command="{Binding logsCommand}"/>
            <Button Content="{DynamicResource About}" Command="{Binding aboutCommand}"/>
        </metro:WindowCommands>
    </metro:MetroWindow.RightWindowCommands>

    <!--Window resources-->
    <metro:MetroWindow.Resources>
        <!--Dictionaries-->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Localization/MainWindow.en-US.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </metro:MetroWindow.Resources>

    <materialDesign:DialogHost Identifier="RootDialog" Focusable="False">
        <Grid Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!--Left column - Instructions-->
            <uc:Instructions Grid.Column="0" Grid.Row="0"/>

            <!--Left column - Hotkeys-->
            <uc:Hotkeys Grid.Column="0" Grid.Row="2"/>

            <!--Left column - Start with windows-->
            <CheckBox Grid.Column="0" Grid.Row="3" Margin="0 10 5 0" Content="{DynamicResource Autostart}" IsChecked="{Binding AutoStart}" VerticalContentAlignment="Top" VerticalAlignment="Top" HorizontalAlignment="Left"/>

            <!--Right column - Processes whitelist-->
            <GroupBox Grid.Column="2" Grid.Row="0" Grid.RowSpan="5" Header="{DynamicResource Whitelist}">
                <Grid Margin="-8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!--Processes list-->
                    <DataGrid Grid.Row="0" ItemsSource="{Binding Processes}" AutoGenerateColumns="False" SelectionUnit="FullRow" CanUserResizeRows="False" CanUserAddRows="False" CanUserDeleteRows="True">
                        <DataGrid.Columns>
                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding Name}" Width="*" IsReadOnly="True">
                                <materialDesign:MaterialDataGridTextColumn.Header>
                                    <TextBlock Text="{DynamicResource Process}" />
                                </materialDesign:MaterialDataGridTextColumn.Header>
                            </materialDesign:MaterialDataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <!--Add process-->
                    <Grid Grid.Row="2" Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <materialDesign:PackIcon Grid.Column="0" Kind="Application" VerticalAlignment="Bottom" Margin="0 0 0 8" Foreground="{Binding ElementName=ProcessTextBox, Path=BorderBrush}" />
                        <TextBox x:Name="ProcessTextBox" Margin="5" Grid.Column="1" Text="{Binding ProcessToAdd, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="{DynamicResource ProcessName}" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>

                        <Button VerticalAlignment="Bottom" Grid.Column="3" Content="{DynamicResource Add}" Command="{Binding addProcessCommand}" IsEnabled="{Binding IsProcessToAdd}" Style="{StaticResource MaterialDesignFlatButton}" IsDefault="True"/>
                    </Grid>

                    <materialDesign:Snackbar Grid.RowSpan="3" MessageQueue="{materialDesign:MessageQueue}" x:Name="SnackbarAdd" HorizontalAlignment="Stretch"/>
                </Grid>
            </GroupBox>
            
            <!--Me-->
            <TextBlock Grid.Column="0" Grid.Row="5" Text="by Thomas Ferrone" VerticalAlignment="Bottom" Margin="0 10 0 0" Foreground="Gray" FontSize="10"/>
        </Grid>
    </materialDesign:DialogHost>
</metro:MetroWindow>
